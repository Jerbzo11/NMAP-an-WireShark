
----code---
from scapy.all import IP, ICMP

# Create a new packet with a custom source IP address
packet = IP(src="192.168.1.100", dst="www.facebook.com") / ICMP()

# Display the packet details
print(packet.show())


-----output------
###[ IP ]###
  version   = 4
  ihl       = None
  tos       = 0x0
  len       = None
  id        = 1
  flags     =
  frag      = 0
  ttl       = 64
  proto     = icmp
  chksum    = None
  src       = 192.168.1.100
  dst       = Net("www.facebook.com/32")
  \options   \
###[ ICMP ]###
     type      = echo-request
     code      = 0
     chksum    = None
     id        = 0x0
     seq       = 0x0
     unused    = ''

None

 send=sendp(packet)



-------------------------------------------------------------------------------
It seems you've successfully displayed the details of the packet you created in Scapy. The output shows the layers and fields of the packet, including the IP layer and the ICMP layer.

Here's a breakdown of the output:

    IP Layer:
        version: The IP version (IPv4).
        ihl: Internet Header Length (automatically calculated).
        tos: Type of Service.
        len: Total length of the IP packet (automatically calculated).
        id: Identification.
        flags: Flags (none shown).
        frag: Fragment Offset.
        ttl: Time To Live.
        proto: Protocol (ICMP).
        chksum: Checksum (automatically calculated).
        src: Source IP address.
        dst: Destination IP address.

    ICMP Layer:
        type: ICMP message type (echo-request).
        code: ICMP code.
        chksum: Checksum (automatically calculated).
        id: Identifier.
        seq: Sequence number.
        unused: Unused field.

Everything looks good! If you have any further questions or if there's anything else you'd like to do with this packet, feel free to let me know!

